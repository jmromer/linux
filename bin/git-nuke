#!/usr/bin/env bash

#
# Completely remove a file from the repository, including past commits and tags.
#
# Usage:
#
#   git nuke secrets.json
#

set -e

usage() {
  cat "$0" | head -"$((LINENO - 4))" | grep '^#' | tail -n +2 | cut -c 3-
}

warning() {
  echo """
  WARNING:

    git-filter-branch has a tendency to produce mangled history rewrites. Before
    running this script, make sure you create a backup your repo by copying it or
    pushing it to a remote, and inspect its history after it completes before
    pushing again to overwrite that remote.

    Consider also an alternative filtering tool such as 'git filter-repo'
    (https://github.com/newren/git-filter-repo/) instead.

    See the filter-branch manual page for more details.
  """ | sed -E 's/ {2}//'
}

file="$1"

if [[ "${file}" == "--help"  || "${file}" == "-h" ]]; then
  usage
  warning
  exit 2
fi

if [[ ! -d ".git/" ]]; then
  echo "Must be run from the root of a Git repository."
  usage
  exit 1
fi

if [[ -z "${file}" ]]; then
  echo "Error: File argument required." 1>&2
  usage
  exit 1
fi


warning

echo "This script will re-write this repo's entire history to remove the file '${file}'."
echo
echo "Press enter to continue, ^C to quit."
read -n1

git filter-branch \
  -f \
  --index-filter \
  "git rm -r --cached '${file}' --ignore-unmatch" --prune-empty --tag-name-filter cat -- --all
